{% if redmine_trackers is defined %}
# トラッカー
trackers = YAML.load(<<EOT)
{{ redmine_trackers | to_yaml }}
EOT
default_issue_status = IssueStatus.first
default_core_fields = [
  'assigned_to_id',
  'category_id',
  'fixed_version_id',
  'parent_issue_id',
  'start_date',
  'due_date',
  'estimated_hours',
  'done_ratio',
  'description'
]
# ワークフローのコピー元の指定がないトラッカーを登録
not_exists_copy_from_trackers = trackers.reject {|item| item['copy_workflow_from'].present? }
if not_exists_copy_from_trackers
  not_exists_copy_from_trackers.each do |item|
    tracker = Tracker.find_by_name(item['name'])
    unless tracker
      tracker = Tracker.new
      tracker.name = item['name']
      tracker.core_fields = default_core_fields
    end
    tracker.core_fields = item['core_fields'] if item['core_fields'].present?
    tracker.default_status_id = default_issue_status.id
    if item['default_status'].present?
      issue_status = IssueStatus.find_by_name(item['default_status'])
      tracker.default_status_id = issue_status.id
    end
    tracker.position = item['position'] if item['position'].present?
    if tracker.save
      if item['copy_workflow_from'].present? && (copy_from = Tracker.find_by_name(item['copy_workflow_from']))
        tracker.copy_workflow_rules(copy_from)
      end
    end
  end
end

# ワークフローのコピー元の指定があるトラッカーを登録
exists_copy_from_trackers = trackers.select {|item| item['copy_workflow_from'].present? }
if exists_copy_from_trackers
  exists_copy_from_trackers.each do |item|
    tracker = Tracker.find_by_name(item['name'])
    unless tracker
      tracker = Tracker.new
      tracker.name = item['name']
      tracker.core_fields = default_core_fields
    end
    tracker.core_fields = item['core_fields'] if item['core_fields'].present?
    tracker.default_status_id = default_issue_status.id
    if item['default_status'].present?
      issue_status = IssueStatus.find_by_name(item['default_status'])
      tracker.default_status_id = issue_status.id
    end
    tracker.position = item['position'] if item['position'].present?
    if tracker.save
      if item['copy_workflow_from'].present? && (copy_from = Tracker.find_by_name(item['copy_workflow_from']))
        tracker.copy_workflow_rules(copy_from)
      end
    end
  end
end
{% endif %}
