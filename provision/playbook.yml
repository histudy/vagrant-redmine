- name: Deploy Redmine
  hosts: all
  roles:
    - role: common
    - role: mariadb
    - role: nginx
    - role: dehydrated
    - role: redmine
    - role: tools
  tasks:
    - name: set user config
      block:
        - name: set variables
          ansible.builtin.set_fact:
            redmin_db_host: "{{ redmine_db_cfg.production.host }}"
            redmin_db_name: "{{ redmine_db_cfg.production.database }}"
            redmin_db_user: "{{ redmine_db_cfg.production.username }}"
            redmin_db_password: "{{ redmine_db_cfg.production.password }}"
        - name: set enviromnet variables
          ansible.builtin.blockinfile:
            path: ~/.bashrc
            block: |
              export TBLS_DSN=my://{{ redmin_db_user }}:{{ redmin_db_password }}@{{ redmin_db_host }}:3306/{{ redmin_db_name }}
              export TBLS_DOC_PATH=/vagrant/dbdoc/{{ redmine_version }}
        - name: create mysql connection file
          ini_file:
            path: ~/.my.cnf
            create: true
            section: client
            option: "{{ item.key | replace('_', '-') }}"
            value: "{{ item.value | string }}"
            mode: "0640"
          with_dict:
            host: "{{ redmin_db_host }}"
            database: "{{ redmin_db_name }}"
            user: "{{ redmin_db_user }}"
            password: "{{ redmin_db_password }}"
            default_character_set: "{{ mariadb_databases[0].encoding | default(mariadb_default_charset | default('utf8')) }}"
      become: false
    - name: apply custom directory mapping
      block:
        - name: apply custom directory mapping
          ansible.builtin.file:
            dest: "{{ redmine_home }}/{{ item.dest }}"
            src: "/vagrant/{{ item.src }}"
            owner: "{{ redmine_user }}"
            group: "{{ redmine_user }}"
            state: link
          loop: "{{ redmine_custom_directory_mappings }}"
          notify: restart redmine
          register: result
        - name: resetup redmine
          block:
            - name: execute bundle install
              ansible.builtin.command: bundle install
              args:
                chdir: "{{ redmine_home }}"
              tags:
                - skip_ansible_lint
            - name: execute bundle exec rake db:migrate
              ansible.builtin.command: bundle exec rake db:migrate
              args:
                chdir: "{{ redmine_home }}"
              tags:
                - skip_ansible_lint
            - name: execute bundle exec rake redmine:plugins:migrate
              ansible.builtin.command: bundle exec rake redmine:plugins:migrate
              args:
                chdir: "{{ redmine_home }}"
              tags:
                - skip_ansible_lint
          when: result is changed
      when: redmine_custom_directory_mappings is defined
    - name: restart service
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: restarted
      loop:
        - redmine
        - nginx
    - name: Finish display message
      ansible.builtin.debug:
        msg: "Let's Redmine!"
